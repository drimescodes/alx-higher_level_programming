The test suite for the 0-add_integer.py module

>>> add_integer = __import__('0-add_integer').add_integer

Test 01:
	>>> add_integer(1, 2)
	3

Test 02:
	>>> add_integer(1, "2")
	Traceback (most recent call last):
		...
	TypeError: b must be an integer

Test 03:
	>>> add_integer("1", 2)
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

Test 04:
	>>> add_integer(1.5, 2)
	3

Test 05:
	>>> add_integer(1, 2.5)
	3

Test 06:
	>>> add_integer(1.5, 2.5)
	3

Test 07:
	>>> add_integer(-1, 2)
	1

Test 08:
	>>> add_integer(1, -2.5)
	-1

Test 09:
	>>> add_integer(-1.5, -2.5)
	-3

Test 10:
	>>> add_integer(None, 2)
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

Test 11:
	>>> add_integer(None)
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

Test 12:
	>>> add_integer(1, None)
	Traceback (most recent call last):
		...
	TypeError: b must be an integer

Test 13:
	>>> add_integer()
	Traceback (most recent call last):
		...
	TypeError: add_integer() missing 1 required positional argument: 'a'

Test 14:
	>>> add_integer("lol", "cap")
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

Test 15:
	>>> add_integer(float('inf'))
	Traceback (most recent call last):
		...
	OverflowError: cannot convert float infinity to integer

Test 16:
	>>> add_integer(3, float('inf'))
	Traceback (most recent call last):
		...
	OverflowError: cannot convert float infinity to integer

Test 17:
	>>> add_integer(float('nan'))
	Traceback (most recent call last):
		...
	ValueError: cannot convert float NaN to integer

Test 18:
	>>> add_integer(3, float('nan'))
	Traceback (most recent call last):
		...
	ValueError: cannot convert float NaN to integer

Test 19:
	>>> add_integer(1.5, float('nan'))
	Traceback (most recent call last):
		...
	ValueError: cannot convert float NaN to integer

Test 20:
	>>> add_integer(2.5)
	100